version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: insurance-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: insurance_db
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - insurance-network

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: insurance-backend
    restart: unless-stopped
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=production
      - PORT=4000
      - MONGO_URI=mongodb://admin:password123@mongodb:27017/insurance_db?authSource=admin
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
      - CLOUDINARY_CLOUD_NAME=your-cloudinary-cloud-name
      - CLOUDINARY_API_KEY=your-cloudinary-api-key
      - CLOUDINARY_API_SECRET=your-cloudinary-api-secret
    depends_on:
      - mongodb
    networks:
      - insurance-network
    volumes:
      - ./backend/uploads:/app/uploads

  # Frontend (Development)
  frontend-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: insurance-frontend-dev
    restart: unless-stopped
    ports:
      - "4200:4200"
    environment:
      - NODE_ENV=development
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - insurance-network
    profiles:
      - dev

volumes:
  mongodb_data:
    driver: local

networks:
  insurance-network:
    driver: bridge
